services:
  diffy-bot-client:
    container_name: diffy-bot-client
    working_dir: /solver-client
    env_file:
      - .env
    environment:
      - CLIENT_API_KEY=${CLIENT_API_KEY}
      - CLIENT_API_URL=http://diffy-bot-server:8080/api/solver
    ports:
      - "8001:8000"
    volumes:
      - ./solver-bot/src:/solver-client/src
    depends_on:
      - diffy-bot-db
      - diffy-bot-server
    networks:
      - solver-network
    build:
      context: .
      dockerfile: solver-bot/Dockerfile

  diffy-bot-server:
    container_name: diffy-bot-server
    working_dir: /solver-server
    env_file:
      - .env
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=diffy-bot-db-container
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "8081:8080"
    volumes:
      - ./solver-common/src:/solver-server/src
    depends_on:
      - diffy-bot-db
    networks:
      - solver-network
    build:
      context: .
      dockerfile: solver-common/Dockerfile

  diffy-bot-db:
    image: postgres:17.5-alpine
    container_name: diffy-bot-db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - solver-network

volumes:
  pgdata:

networks:
  solver-network:
    driver: bridge